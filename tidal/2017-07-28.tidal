-- sounds
let k = ["ab:4", "ab:5"]
    s = ["ab:11"]
    h = ["ab:0"]
    t = ["ab:7"]
    c = ["ab:6"]
    r = ["ab:9"]
    p = ["ade:1", "ade:6"]

-- useful functions
let trim = ifp (< 0) (\x -> silence) id
    retrig d p = do now <- getNow
                    d $ (nextSam now) `rotR` p
    trigin c d p = retrig d $ c ~> (trim p)
    trig = trigin 0
    -- continuous nonperiodic patterns
    cosdecay = (\x -> cos (x*pi) *0.5 +0.5) <$> envL
    ease begin end dur = (scale end begin $ slow dur $ cosdecay)
    time = sig fromRational
    cyc = sig (fromIntegral.floor)
    nforn t = (floor $ ((sqrt (8*t+1))+1)/2)
    nforncycs = sig (fromIntegral.nforn.fromRational)
    -- better filters, fader
    linquart x = x**5 + x*(1-x*x)/4
    quadquart x = x**5 + x*(1-x)*x*x/4
    ucutoff p = cutoff (scale 20 20000 $ quadquart <$> p)
    uhcutoff p = hcutoff (scale 20 20000 $ quadquart <$> p)
    fader p p2 = p2 # ucutoff (scale 0.3 1 p) # uhcutoff (scale 0.7 0 p) |+| shape (scale 0 0.2 p) |*| gain (scale 0.6 1 p)
    -- convenience
    fade b e d = fader (ease b e d)

(floor $ ((sqrt (8*(4::Double)+1))+1)/2)

-- tempo
cps 0.55

-- parts
let bass = gain "1(3,8)" # sound (p!!1) # speed "0.0625" # legato "3" |*| gain "0.75" |*| up "{0 1 4 7}%8"
    bass2 = gain "[1, [~ [~ 1] 1*2 1]*2]" # release "2 0.7" # sound (p!!1) # speed "0.0625" |*| gain "0.9" |*| up "{0 1 -5}%16" # cut "101"
    bass3 = gain "[1, [~ [~ 1] 1*2 1] ~]" # release "2 0.7" # sound (p!!1) # speed "0.0625" |*| gain "0.9" |*| up "{0 7 1}%16" # cut "102" |*| speed "0.5"
    bass4 = [
            gain "[1 ~ ~ ~, ~ [1 [1 1/2]]*4]" # release "2 0.7" # sound (p!!1) # speed "0.0625" |*| gain "0.9" |*| up "0 <0 1>  <0 1 4> <0 1 4 7 -5>" # cut "103",
            gain "[1, ~ [[~ 1] 1]*4]" # release "1.5 0.6" # sound (p!!1) # speed "0.0625" |*| gain "0.7" |*| up "0 <0 1>  <0 1 4> <0 1 4 12 -5>" # cut "104" # pan "0.2",
            gain "[1, ~ [1 [~ 1]]*4]" # release "1.5 0.6" # sound (p!!1) # speed "0.0625" |*| gain "0.7" |*| up "0 <0 1>  <0 1 4> <0 1 4 13 -5>" # cut "105" # pan "0.8"
            ]
    --
    unphase = gain "[~ 1]*2" # sound (p!!1) |+| begin "0.0" # speed "0.0625" |*| gain "0.75" |*| up "14" # legato "0.333"
    phase = gain "{~ ~ 1 ~ ~ ~ 1 ~ ~ ~ 1 ~ ~ }%8" # sound (p!!1) |+| begin "0.0" # speed "0.0625" |*| gain "0.75" |*| up "25" # legato "0.333"
    phase2 = gain "{~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ }%16" # sound (p!!1) |+| begin "0.0" # speed "0.0625" |*| gain "0.75" |*| up "38" # legato "0.333"
    --
    kick = gain "1 1 1 [1 ~ ~ <~ ~ ~ 1>]" # sound (k!!1) # speed "1.1667" # cut "-1" # release "0.5" # cutoff "2000" # shape "0.3 0.25 0.35 0.2" # pan 0.4
    kick2 = gain (stack ["1*16", (1/64) <~ "0.9"]) |*| gain "[1 0.95 0.8 0.9]*2" # sound (k!!1) # speed "1.1667" |*| speed "[1 2]*8" # cut "-1" # release "0.5" # cutoff "2000" # shape "0.3" # pan 0.4
    synkick = gain "1(3,8)" # sound (k!!0) # pan (slow (3/5) saw) # speed "1.5" # shape "0.2" |*| gain "0.95"
    synkick2 = gain "[~, [~ [~ 1] 1*2 1]*2]" # sound (k!!0) # pan (slow (2/5) sine) # speed "1.5" # shape "0.2" # legato "0.7" |*| gain "0.95"
    --
    oct = gain "1(7,8)" # shape "{0.5 0.2}%8" # sound (h!!0) # speed "2"
    hex = (1/16) ~> gain "1(15,16)" # shape "{0 0.2 0.4 0.2}%16" # sound (t!!0)
    hex2 = (13/48) ~> gain "1(15,16)" # shape "{0 0.1 0.2 0.3 0.4 0.3 0.2 0.1}%16" # sound (h!!0) # speed "3" |*| gain "0.9" # pan "0.6"
    --
    ride = gain "~ 1 ~ 1 ~ [1 1/2] [~ 1/4] 1" # shape "0.5" # legato "2" # sound (r!!0)
    ride2 = gain "~ 1 ~ 1 ~ [1 1/2] [~ 1/4] 1" # speed "0.9 1 2 0.667" # shape "0.1" # sound (r!!0) # pan "0.7"
    --
    snare = (1/4) ~> gain "1(3,8)" # sound (s!!0) # speed "{1 2 3 4}%8" # shape "0.5" |*| gain "0.95"
    snare2 = gain "[[0.5 0.9] [1 <~ 0.9/2>]]*2" # sound (s!!0) # speed "2 1 2 3" # shape "0.5" |*| gain "0.95"
    --
    melody = density "<1 1 1 [2 1]>" $ gain "1(9,16)" # sound (p!!1) |+| begin "0.0" # speed "0.5" # legato "3" |*| gain "0.7" |*| up "{0 15 4 7}%16" # pan "0.55"
    ctrmelody = (1/32) ~> (density "<1 2 1 1>" $ gain "1(9,16)" # sound (p!!1) |+| begin "0.0" # speed "0.5" # legato "1" |*| gain "0.65" |*| up "{0 2 1 12}%16" # pan "0.4")
    chords = stack [
                   slow 8 $ melody # attack "0.9" # release "1" |*| speed "0.125" # pan "0.3",
                   (3/16) <~ (slow 8 $ ctrmelody # attack "0.5" # release "1" |*| speed "0.125" # pan "0.7")
                   ]
    --
    wild x y z = mask ("1 1 <~ ~ ~ 1> [<1 ~> 1 1]"::Pattern Bool) $ seqPLoop [
      (0, x, fast 6 $ stack [unphase, phase, phase2] |*| legato "3" |*| up "1"),
      (0, y, fast 3 $ stack [unphase, phase, phase2] |*| legato "3" |*| up "4"),
      (0, z, fast 4 $ stack [unphase, phase, phase2] |*| legato "3" |*| up "3")
      ] |+| legato (slow 5 sine)

-- effects
let chain0 = orbit "0" -- # room "0.05" # size "0.3"
    chain1 = orbit "1" -- # room "0.15" # size "0.6"
    chain2 = orbit "2" -- # room "0.1" # size "0.8"

-- track
do
  hush
  trig d1 $ stack [kick # chain0, synkick # chain1]

do
  trig d2 $ oct # chain0
  trig d6 $ bass # chain0
  t9 (xfadeIn 16) $ chords # cutoff "1000" # chain2

do
  trig d1 $ fade 1 0.8 16 $ stack [kick # chain0, synkick # chain1]
  trig d2 $ stack [oct, hex] # chain0
  trigin 8 d3 $ density "<1 1 1 [1 1 4 1] 1 [1 8 8 1]/2>" $ snare # chain1

do
  trigin 2 d1 $ fade 1 0 32 $ stack [kick # chain0, synkick # chain1]
  d3 $ snare # chain1 |*| gain "0.95"
  trig d4 $ seqP [(0, 0.5, slow 2 ctrmelody), (0.5, 1, ctrmelody), (1,2, fast 2 ctrmelody)] # chain2 # pan (scale 0.2 0.8 $ slow 2 sine)
  t4 (jumpIn 2) $ stack [melody, ctrmelody] # chain0
  d9 silence

-- pitched 4s or 8s?
do
  trigin 2 d1 $ fade 1 0.8 16 $ kick |+| shape "0.2" # chain2 # pan "0.5"
  trigin 2 d2 $ fade 1 0.8 4 $ stack [hex, oct] |+| shape "0.1" # chain0
  d3 silence
  trig d4 $ seqP [(0,1.5,slow 3 melody), (1.5,2,fast 2 melody)] # chain2
  trig d5 $ fade 1 0.8 16 $ stack [ride, ride2] |+| shape "0.1" # chain1

do
  trig d2 $ fade 1 0.8 16 $ stack [hex, hex2, oct] # chain1 |+| shape "0.15"

do
  t5 (jumpIn' 2) $ ride2 # chain1
  t2 (jumpIn' 2) $ stack [hex, hex2, oct] # chain0
  trig d7 $ fade 0.2 1 8 $ stack [unphase, phase, phase2] |*| speed "2" # chain2
  trig d4 $ seqP [(0, 1.5, slow 3 melody), (1.5, 2, slow 2 melody)] # chain2 # pan (scale 0.2 0.8 $ slow 2 sine)
  t4 (jumpIn' 2) $ stack [melody, ctrmelody] # chain0

do
  d2 silence
  -- trig d2 $ stack [oct, hex2] # chain0 # pan (scale 0.3 0.5 $ fast 3 sine)
  d6 silence
  d4 silence

do
  trig d1 $ fade 1 0.8 8 $ stack [kick # chain0, synkick2 # chain2] |+| shape "0.2"
  trig d2 $ oct # chain0 |+| shape "0.15" # pan (scale 0.3 0.5 $ fast 3 sine)
  d3 $ snare2 # chain0
  d5 silence

do
  trig d1 $ fade 1 0.8 16 $ stack [fast 2 $ kick # chain0, synkick2 # chain2] |+| shape "0.1"
  d3 $ fast 2 $ snare2 # chain0

do
  d1 $ kick2 # chain0
  d2 $ stack [oct, hex2] # chain0 |+| shape "0.2"
  trig d8 $ fast 4 $ stack [unphase, phase, phase2] |*| speed "2" # chain2 |*| gain "0.95"

do
  d1 silence
  d2 silence
  trig d3 $ fast 8 $ snare2 |*| speed (scale 0.0625 1 $ slow 32 sine) |*| gain "0.95" # chain1 # legato "1.5"
  trigin 2 d9 $ fast 8 $ snare |*| speed (scale 0.0625 0.5 $ slow 32 sine) |*| gain "0.95" # chain2 # legato "1" # pan (scale 0.1 0.9 $ slow 15 ((1/4) <~ sine)) # cutoff "1000"

-- better transition
do
  d7 silence
  d8 silence
  trig d9 $ fade 0.5 0 12 $ fast 8 $ snare |*| speed (scale 0.0625 0.5 $ slow 32 sine) |*| gain "0.95" # chain2 # legato "1" # pan (scale 0.1 0.9 $ slow 15 ((1/4) <~ sine)) |*| cutoff "0.5"
  -- t9 (xfadeIn 8) silence
  trig d1 $ stack [kick, synkick2] # chain1 |+| shape "0.2"
  trig d2 $ fade 0.3 1 16 $ seqPLoop [(0.5, 1, hex)] # chain1 |+| shape "0.1" # pan (scale 0.2 0.5 $ fast 3 sine)
  -- trig d3 $ snare2 |*| speed (scale 0.0625 1 $ slow 8 sine) # cutoff "2000" # hcutoff "500" # chain2
  trig d3 $ snare2 |*| speed (scale 0.0625 1 $ slow 8 ((1/2) <~ sine)) # cutoff "2000" # hcutoff "500" # chain2
  trig d6 $ bass2 # chain0

do
  d1 $ fade 1 0.8 16 $ stack [kick2 # chain0, synkick # chain2] |+| shape "0.15"
  t5 (xfadeIn 16) $ stack [ride, ride2] # chain1 |+| shape "0.2"
  trig d2 $ seqPLoop [(0.5, 1, hex), (0.5,1,oct)] # chain1 |+| shape "0.1" # pan (scale 0.2 0.5 $ fast 3 sine)
  trig d3 $ snare2 # chain2
  t8 (xfadeIn 16) $ bass3 # cutoff "300"

-- more build here

do
  d3 silence
  d5 silence
  d1 $ kick2 # chain0
  trigin 8 d6 $ stack bass4 # hcutoff "230" # chain0

do
  d4 $ slow 2 $ stack [melody, ctrmelody] # chain0
  t5 (xfadeIn 8) $ ride2 # chain2

-- more build
do
  d9 $ (1/8) <~ (slow 6 $ stack [melody, ctrmelody] # chain2 |*| speed "2")
  t5 (xfadeIn 8) $ stack [ride, ride2] # chain2 |+| shape "0.1"

do
  d6 silence
  d5 silence
  d2 $ oct # chain0
  d4 $ slow 4 $ stack [melody, ctrmelody] # chain0 |*| speed "4"

do
  t1 (clutchIn 32) $ kick # chain2 |+| shape "0.1"
  t7 (clutchIn 32) $ wild 1 1 1 # chain2

do
  trig d1 $ fade 0.8 1 16 $ kick |+| shape "0.2" # chain2
  trig d5 $ fade 0.4 1 16 $ stack [ride, (1/8) ~> ride2, (3/8) ~> ride2 # pan "0.1"] |+| shape "0.2" # legato (slow 3 $ sine/3 + 1/3) # chain2

do
  d2 $ stack [hex2, oct] # chain0 |+| shape "0.1"

-- more build

do
  d1 $ slow 2 kick # chain0 |+| cut "10" |*| speed (ease 1 0.5 32)
  d2 silence
  d5 silence
  t8 (xfadeIn 16) silence
  t3 (xfadeIn 8) silence
  trig d7 $ ("<1 2>") >>= \x -> ("<1 2 3>") >>= \y -> (slow 2 "<1 2 3 4 5>") >>= \z -> wild x y z # chain2 # shape "0.1"
  trigin 10 d4 $ slow 2 $ stack [melody, ctrmelody] # chain0 |*| speed (scale 0.5 2 $ slow 8 $ (1/4) <~ sine)

-- ---------

trig d7 $ ("<1>") >>= \x -> ("<1>") >>= \y -> (nforncycs) >>= \z -> wild x y z # chain2 # shape "0.1"

do
  trig d1 $ (fast 2 nforncycs) >>= (\x -> sound (slow (2^x) "bd*64") ) # cut "100" # chain0
  trig d2 $ sound "[~ bd]*2" # speed "3" # chain2

do
  hush
  trig d1 $ seqPLoop [
    (0, 4, (fast 2 nforncycs) >>= (\x -> sound (slow (2^x) "ab:5*64") ) # pan "[0.5 0.2 0.5 0.8]*4" # legato "1" # chain0),
    (0, 4, sound "[~ ab:5]*2" # speed "3" # chain2)
    ] # shape "0.2"

hush
